@page "/tasks/overview" 
@using Blazorise.DataGrid
@using SpiritTime.Shared.Models.TaskModels

<div class="center-and-highlight">
    <div class="col-12 custom-background mt-5">
        <div class="text-center">
            <div class="text-right">
                <button class="custom-small-button" @onclick="AddAndStartTimer"></button>
            </div>
            <h1>@TextMsg.Task</h1>

        </div>
        @if (ShowError && ErrorMsg != null)
        {
            <div class="alert alert-danger" role="alert">
                @ErrorMsg
            </div>
        }
        @if (!TaskDailyLists.Any())
        {
            if (NoElements)
            {
                <p>
                    <em>@TextMsg.NoElements</em>
                </p>
            }
            else
            {
                <p>
                    <em>@TextMsg.Loading</em>
                </p>
            }
        }
        else
        {
            if (CurrentItem != null)
            {
                <div class="d-flex justify-content-around">
                    <input @bind="@CurrentItem.Name" type="text" class="form-control" placeholder="Name"/>
                    <input @bind="@CurrentItem.Description" type="text" class="form-control" placeholder="Description"/>
                    <input @bind="@CurrentItem.StartDate" type="time" class="form-control" placeholder="StartDate"/>
                    <input @bind-value="@CurrentTime" type="text" class="form-control" readonly/>
                    @* <label>@CurrentTime</label> *@
                    <button class="custom-small-button" @onclick="@(() => Update(CurrentItem))">
                        <span class="oi oi-pencil"></span>
                    </button>
                    <button class="custom-small-button red ml-3" @onclick="@(() => Stop(CurrentItem))">
                        <i class="fas fa-stop"></i>
                    </button>
                </div>
            }

            foreach (var item in TaskDailyLists)
            {
                <div class="custom-task-background mb-4">
                    <div class="d-flex justify-content-between task-header">
                        <h3>@item.Date.ToString("dd.MM.yyyy")</h3>
                        <h4>Total: @GetTimSpanByTimeSpan(item.TimeSpan, false)</h4>
                    </div>

                    @foreach (var task in item.ItemList)
                    {
                        if (task != CurrentItem)
                        {
                            <div class="d-flex justify-content-between mb-1">
                                <div class="d-flex justify-content-around expand">
                                    @* <label for="unit-name">@TextMsg.WorkspaceName:</label> *@
                                    <input @bind="@task.Name" type="text" class="form-control" placeholder="Name"/>
                                    <input @bind="@task.Description" type="text" class="form-control" placeholder="Description"/>
                                    <input @bind="@task.StartDate" type="time" class="form-control" placeholder="StartDate"/>
                                    <input @bind="@task.EndDate" type="time" class="form-control" placeholder="EndDate"/>
                                    <label class="form-control"> @GetTimeSpanByDates(task.StartDate, task.EndDate, false) </label>

                                </div>
                                <div class="d-flex justify-content-around">
                                    <button class="custom-small-button" @onclick="@(() => Update(task))">
                                        <span class="oi oi-pencil"></span>
                                    </button>
                                    <button class="custom-small-button green ml-3" @onclick="@(() => Start(task))">
                                        <i class="fas fa-play"></i>
                                    </button>
                                </div>

                            </div>
                        }
                    }
                </div>
            }
        }
    </div>
</div>